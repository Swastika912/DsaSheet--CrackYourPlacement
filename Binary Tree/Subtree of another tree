class Solution {
    // boolean b = false;
    // public boolean isSubtree(TreeNode root, TreeNode subRoot) {
    //    isSubtree2(root , subRoot);
    //    return b; 
    // }
     public boolean isSubtree(TreeNode root, TreeNode subRoot ) {
        if(root == null){
            return false;
        }
        if(root.val == subRoot.val){
            if( sameTree(root , subRoot)){
                return true;
            }
        }
        return isSubtree(root.left , subRoot)|| isSubtree(root.right , subRoot);
    }
    
    
    public boolean sameTree(TreeNode root, TreeNode subRoot){
        if(root == null && subRoot == null){
            return true;
        }
        if(subRoot == null || root == null){
            return false;
        }
        
        if(root.val != subRoot.val){
            return false;
        }
        return sameTree(root.left , subRoot.left) && sameTree(root.right , subRoot.right);
    }
}
